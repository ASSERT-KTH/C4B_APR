diff --git a/Users/bardia/Downloads/data 4/data/1473_problem_id/77410_author_id/Rejected.py b/Users/bardia/Downloads/data 4/data/1473_problem_id/77410_author_id/Accepted.py
index 1ec52c2..a083315 100644
--- a/Users/bardia/Downloads/data 4/data/1473_problem_id/77410_author_id/Rejected.py	
+++ b/Users/bardia/Downloads/data 4/data/1473_problem_id/77410_author_id/Accepted.py	
@@ -1,10 +1,46 @@
 import math
+"""
+#include <cstdio>
+#include <iostream>
+#include <algorithm>
 
+bool isRight(int *c){
+
+    int sides[3] = {0};
+    sides[0] = (c[4] - c[2]) * (c[4] - c[2]) + (c[5] - c[3])* (c[5] - c[3]);
+    sides[1] = (c[4] - c[0]) * (c[4] - c[0]) + (c[5] - c[1])* (c[5] - c[1]);
+    sides[2] = (c[2] - c[0]) * (c[2] - c[0]) + (c[3] - c[1])* (c[3] - c[1]);
+
+    std::sort(sides, sides + 3);
+    if(sides[0] > 0 && sides[2] == sides[0] + sides[1]){return 1;}
+    else{return 0;}
+}
+
+
+int main(){
+
+    int points[6] = {0};
+    for(int k = 0; k < 6; k++){scanf("%d", points + k);}
+
+    std::string output = "NEITHER";
+    if(isRight(points)){output = "RIGHT";}
+    else{
+        for(int k = 0; k < 6; k++){
+            ++points[k];    if(isRight(points)){output = "ALMOST"; break;}
+            points[k] -= 2; if(isRight(points)){output = "ALMOST"; break;}
+            ++points[k];
+        }
+    }
+
+    std::cout << output << std::endl;
+    return 0;
+}
+"""
 def distancia_euclidiana(x, y):
     lados = []
-    lados.append(math.sqrt(math.pow(x[0] - x[1], 2) + math.pow(y[0] - y[1], 2)))
-    lados.append(math.sqrt(math.pow(x[0] - x[2], 2) + math.pow(y[0] - y[2], 2)))
-    lados.append(math.sqrt(math.pow(x[1] - x[2], 2) + math.pow(y[1] - y[2], 2)))
+    lados.append(math.pow(x[0] - x[1], 2) + math.pow(y[0] - y[1], 2))
+    lados.append(math.pow(x[0] - x[2], 2) + math.pow(y[0] - y[2], 2))
+    lados.append(math.pow(x[1] - x[2], 2) + math.pow(y[1] - y[2], 2))
     return sorted(lados)
 
 
