diff --git a/Users/bardia/Downloads/data 4/data/1975_problem_id/87704_author_id/Rejected.py b/Users/bardia/Downloads/data 4/data/1975_problem_id/87704_author_id/Accepted.py
index ec91193..a061d2e 100644
--- a/Users/bardia/Downloads/data 4/data/1975_problem_id/87704_author_id/Rejected.py	
+++ b/Users/bardia/Downloads/data 4/data/1975_problem_id/87704_author_id/Accepted.py	
@@ -2,21 +2,31 @@ n, t = input().split()
 seq = list(input())
 
 for i in range(int(t)):
-    newSeq = []
-    is_change = False
+    switchs = []
     for j in range(int(n) - 1):
-        if is_change:
-            is_change = False
-            continue
         if seq[j] == 'B' and seq[j + 1] == 'G':
-            newSeq.append('G')
-            newSeq.append('B')
-            is_change = True
-        else:
-            newSeq.append(seq[j])
-        if j == int(n) - 2:
-            if len(newSeq) != len(seq):
-                newSeq.append(seq[j + 1])
-    seq = newSeq
+            switchs.append(j)
+    for switch in switchs:
+        seq[switch], seq[switch + 1] = seq[switch + 1], seq[switch]
+
+
+# for i in range(int(t)):
+#     newSeq = []
+#     is_change = False
+#     for j in range(int(n) - 1):
+#         if is_change:
+#             is_change = False
+#             continue
+#         if seq[j] == 'B' and seq[j + 1] == 'G':
+#             newSeq.append('G')
+#             newSeq.append('B')
+#             is_change = True
+#         else:
+#             newSeq.append(seq[j])
+#         if j == int(n) - 2:
+#             if len(newSeq) != len(seq):
+#                 newSeq.append(seq[j + 1])
+#     print(newSeq)
+#     seq = newSeq
 
 print(''.join(seq))
\ No newline at end of file
